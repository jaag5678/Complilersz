Grammar

    0 $accept: program $end

    1 program: %empty
    2        | decls ";" stmts

    3 decls: %empty
    4      | decls ";" decl ";"

    5 decl: VAR IDENT ":" dtype
    6     | VAR IDENT ":" dtype "=" exp

    7 dtype: D_INT
    8      | D_FLOAT
    9      | D_STRING
   10      | D_BOOL

   11 stmts: %empty
   12      | stmts ";" stmt ";"

   13 stmt: read
   14     | print
   15     | cond
   16     | loop

   17 read: READ "(" VAR ")"

   18 print: PRINT "(" exp ")"

   19 loop: WHILE "(" exp ")" "{" stmts "}"

   20 cond: IF "(" exp ")" "{" stmts "}" extend

   21 extend: %empty
   22       | ELSE "{" stmts "}"
   23       | ELSE IF "(" exp ")" "{" stmts "}" extend

   24 exp: exp "||" f
   25    | exp "&&" f
   26    | f

   27 f: f "==" g
   28  | f "!=" g
   29  | g

   30 g: g ">=" h
   31  | g "<=" h
   32  | g ">" h
   33  | g "<" h
   34  | h

   35 h: h "+" i
   36  | h "-" i
   37  | i

   38 i: i "*" j
   39  | i "/" j
   40  | j

   41 j: "-" j
   42  | "!" j
   43  | "(" exp ")"
   44  | k

   45 k: IDENT
   46  | INT
   47  | FLOAT
   48  | STRING
   49  | BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 5 6 45
INT (259) 46
FLOAT (260) 47
STRING (261) 48
BOOL (262) 49
D_INT (263) 7
D_FLOAT (264) 8
D_STRING (265) 9
D_BOOL (266) 10
VAR (267) 5 6 17
PRINT (268) 18
READ (269) 17
IF (270) 20 23
ELSE (271) 22 23
WHILE (272) 19
";" (273) 2 4 12
":" (274) 5 6
"=" (275) 6
"(" (276) 17 18 19 20 23 43
")" (277) 17 18 19 20 23 43
"{" (278) 19 20 22 23
"}" (279) 19 20 22 23
"||" (280) 24
"&&" (281) 25
"==" (282) 27
"!=" (283) 28
">=" (284) 30
"<=" (285) 31
">" (286) 32
"<" (287) 33
"+" (288) 35
"-" (289) 36 41
"*" (290) 38
"/" (291) 39
"!" (292) 42


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
decls (40)
    on left: 3 4, on right: 2 4
decl (41)
    on left: 5 6, on right: 4
dtype (42)
    on left: 7 8 9 10, on right: 5 6
stmts (43)
    on left: 11 12, on right: 2 12 19 20 22 23
stmt (44)
    on left: 13 14 15 16, on right: 12
read (45)
    on left: 17, on right: 13
print (46)
    on left: 18, on right: 14
loop (47)
    on left: 19, on right: 16
cond (48)
    on left: 20, on right: 15
extend (49)
    on left: 21 22 23, on right: 20 23
exp (50)
    on left: 24 25 26, on right: 6 18 19 20 23 24 25 43
f (51)
    on left: 27 28 29, on right: 24 25 26 27 28
g (52)
    on left: 30 31 32 33 34, on right: 27 28 29 30 31 32 33
h (53)
    on left: 35 36 37, on right: 30 31 32 33 34 35 36
i (54)
    on left: 38 39 40, on right: 35 36 37 38 39
j (55)
    on left: 41 42 43 44, on right: 38 39 40 41 42
k (56)
    on left: 45 46 47 48 49, on right: 44


State 0

    0 $accept: . program $end

    ";"       reduce using rule 3 (decls)
    $default  reduce using rule 1 (program)

    program  go to state 1
    decls    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: decls . ";" stmts
    4 decls: decls . ";" decl ";"

    ";"  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: decls ";" . stmts
    4 decls: decls ";" . decl ";"

    VAR  shift, and go to state 5

    $default  reduce using rule 11 (stmts)

    decl   go to state 6
    stmts  go to state 7


State 5

    5 decl: VAR . IDENT ":" dtype
    6     | VAR . IDENT ":" dtype "=" exp

    IDENT  shift, and go to state 8


State 6

    4 decls: decls ";" decl . ";"

    ";"  shift, and go to state 9


State 7

    2 program: decls ";" stmts .
   12 stmts: stmts . ";" stmt ";"

    ";"  shift, and go to state 10

    $default  reduce using rule 2 (program)


State 8

    5 decl: VAR IDENT . ":" dtype
    6     | VAR IDENT . ":" dtype "=" exp

    ":"  shift, and go to state 11


State 9

    4 decls: decls ";" decl ";" .

    $default  reduce using rule 4 (decls)


State 10

   12 stmts: stmts ";" . stmt ";"

    PRINT  shift, and go to state 12
    READ   shift, and go to state 13
    IF     shift, and go to state 14
    WHILE  shift, and go to state 15

    stmt   go to state 16
    read   go to state 17
    print  go to state 18
    loop   go to state 19
    cond   go to state 20


State 11

    5 decl: VAR IDENT ":" . dtype
    6     | VAR IDENT ":" . dtype "=" exp

    D_INT     shift, and go to state 21
    D_FLOAT   shift, and go to state 22
    D_STRING  shift, and go to state 23
    D_BOOL    shift, and go to state 24

    dtype  go to state 25


State 12

   18 print: PRINT . "(" exp ")"

    "("  shift, and go to state 26


State 13

   17 read: READ . "(" VAR ")"

    "("  shift, and go to state 27


State 14

   20 cond: IF . "(" exp ")" "{" stmts "}" extend

    "("  shift, and go to state 28


State 15

   19 loop: WHILE . "(" exp ")" "{" stmts "}"

    "("  shift, and go to state 29


State 16

   12 stmts: stmts ";" stmt . ";"

    ";"  shift, and go to state 30


State 17

   13 stmt: read .

    $default  reduce using rule 13 (stmt)


State 18

   14 stmt: print .

    $default  reduce using rule 14 (stmt)


State 19

   16 stmt: loop .

    $default  reduce using rule 16 (stmt)


State 20

   15 stmt: cond .

    $default  reduce using rule 15 (stmt)


State 21

    7 dtype: D_INT .

    $default  reduce using rule 7 (dtype)


State 22

    8 dtype: D_FLOAT .

    $default  reduce using rule 8 (dtype)


State 23

    9 dtype: D_STRING .

    $default  reduce using rule 9 (dtype)


State 24

   10 dtype: D_BOOL .

    $default  reduce using rule 10 (dtype)


State 25

    5 decl: VAR IDENT ":" dtype .
    6     | VAR IDENT ":" dtype . "=" exp

    "="  shift, and go to state 31

    $default  reduce using rule 5 (decl)


State 26

   18 print: PRINT "(" . exp ")"

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    exp  go to state 40
    f    go to state 41
    g    go to state 42
    h    go to state 43
    i    go to state 44
    j    go to state 45
    k    go to state 46


State 27

   17 read: READ "(" . VAR ")"

    VAR  shift, and go to state 47


State 28

   20 cond: IF "(" . exp ")" "{" stmts "}" extend

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    exp  go to state 48
    f    go to state 41
    g    go to state 42
    h    go to state 43
    i    go to state 44
    j    go to state 45
    k    go to state 46


State 29

   19 loop: WHILE "(" . exp ")" "{" stmts "}"

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    exp  go to state 49
    f    go to state 41
    g    go to state 42
    h    go to state 43
    i    go to state 44
    j    go to state 45
    k    go to state 46


State 30

   12 stmts: stmts ";" stmt ";" .

    $default  reduce using rule 12 (stmts)


State 31

    6 decl: VAR IDENT ":" dtype "=" . exp

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    exp  go to state 50
    f    go to state 41
    g    go to state 42
    h    go to state 43
    i    go to state 44
    j    go to state 45
    k    go to state 46


State 32

   45 k: IDENT .

    $default  reduce using rule 45 (k)


State 33

   46 k: INT .

    $default  reduce using rule 46 (k)


State 34

   47 k: FLOAT .

    $default  reduce using rule 47 (k)


State 35

   48 k: STRING .

    $default  reduce using rule 48 (k)


State 36

   49 k: BOOL .

    $default  reduce using rule 49 (k)


State 37

   43 j: "(" . exp ")"

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    exp  go to state 51
    f    go to state 41
    g    go to state 42
    h    go to state 43
    i    go to state 44
    j    go to state 45
    k    go to state 46


State 38

   41 j: "-" . j

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    j  go to state 52
    k  go to state 46


State 39

   42 j: "!" . j

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    j  go to state 53
    k  go to state 46


State 40

   18 print: PRINT "(" exp . ")"
   24 exp: exp . "||" f
   25    | exp . "&&" f

    ")"   shift, and go to state 54
    "||"  shift, and go to state 55
    "&&"  shift, and go to state 56


State 41

   26 exp: f .
   27 f: f . "==" g
   28  | f . "!=" g

    "=="  shift, and go to state 57
    "!="  shift, and go to state 58

    $default  reduce using rule 26 (exp)


State 42

   29 f: g .
   30 g: g . ">=" h
   31  | g . "<=" h
   32  | g . ">" h
   33  | g . "<" h

    ">="  shift, and go to state 59
    "<="  shift, and go to state 60
    ">"   shift, and go to state 61
    "<"   shift, and go to state 62

    $default  reduce using rule 29 (f)


State 43

   34 g: h .
   35 h: h . "+" i
   36  | h . "-" i

    "+"  shift, and go to state 63
    "-"  shift, and go to state 64

    $default  reduce using rule 34 (g)


State 44

   37 h: i .
   38 i: i . "*" j
   39  | i . "/" j

    "*"  shift, and go to state 65
    "/"  shift, and go to state 66

    $default  reduce using rule 37 (h)


State 45

   40 i: j .

    $default  reduce using rule 40 (i)


State 46

   44 j: k .

    $default  reduce using rule 44 (j)


State 47

   17 read: READ "(" VAR . ")"

    ")"  shift, and go to state 67


State 48

   20 cond: IF "(" exp . ")" "{" stmts "}" extend
   24 exp: exp . "||" f
   25    | exp . "&&" f

    ")"   shift, and go to state 68
    "||"  shift, and go to state 55
    "&&"  shift, and go to state 56


State 49

   19 loop: WHILE "(" exp . ")" "{" stmts "}"
   24 exp: exp . "||" f
   25    | exp . "&&" f

    ")"   shift, and go to state 69
    "||"  shift, and go to state 55
    "&&"  shift, and go to state 56


State 50

    6 decl: VAR IDENT ":" dtype "=" exp .
   24 exp: exp . "||" f
   25    | exp . "&&" f

    "||"  shift, and go to state 55
    "&&"  shift, and go to state 56

    $default  reduce using rule 6 (decl)


State 51

   24 exp: exp . "||" f
   25    | exp . "&&" f
   43 j: "(" exp . ")"

    ")"   shift, and go to state 70
    "||"  shift, and go to state 55
    "&&"  shift, and go to state 56


State 52

   41 j: "-" j .

    $default  reduce using rule 41 (j)


State 53

   42 j: "!" j .

    $default  reduce using rule 42 (j)


State 54

   18 print: PRINT "(" exp ")" .

    $default  reduce using rule 18 (print)


State 55

   24 exp: exp "||" . f

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    f  go to state 71
    g  go to state 42
    h  go to state 43
    i  go to state 44
    j  go to state 45
    k  go to state 46


State 56

   25 exp: exp "&&" . f

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    f  go to state 72
    g  go to state 42
    h  go to state 43
    i  go to state 44
    j  go to state 45
    k  go to state 46


State 57

   27 f: f "==" . g

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    g  go to state 73
    h  go to state 43
    i  go to state 44
    j  go to state 45
    k  go to state 46


State 58

   28 f: f "!=" . g

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    g  go to state 74
    h  go to state 43
    i  go to state 44
    j  go to state 45
    k  go to state 46


State 59

   30 g: g ">=" . h

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    h  go to state 75
    i  go to state 44
    j  go to state 45
    k  go to state 46


State 60

   31 g: g "<=" . h

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    h  go to state 76
    i  go to state 44
    j  go to state 45
    k  go to state 46


State 61

   32 g: g ">" . h

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    h  go to state 77
    i  go to state 44
    j  go to state 45
    k  go to state 46


State 62

   33 g: g "<" . h

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    h  go to state 78
    i  go to state 44
    j  go to state 45
    k  go to state 46


State 63

   35 h: h "+" . i

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    i  go to state 79
    j  go to state 45
    k  go to state 46


State 64

   36 h: h "-" . i

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    i  go to state 80
    j  go to state 45
    k  go to state 46


State 65

   38 i: i "*" . j

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    j  go to state 81
    k  go to state 46


State 66

   39 i: i "/" . j

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    j  go to state 82
    k  go to state 46


State 67

   17 read: READ "(" VAR ")" .

    $default  reduce using rule 17 (read)


State 68

   20 cond: IF "(" exp ")" . "{" stmts "}" extend

    "{"  shift, and go to state 83


State 69

   19 loop: WHILE "(" exp ")" . "{" stmts "}"

    "{"  shift, and go to state 84


State 70

   43 j: "(" exp ")" .

    $default  reduce using rule 43 (j)


State 71

   24 exp: exp "||" f .
   27 f: f . "==" g
   28  | f . "!=" g

    "=="  shift, and go to state 57
    "!="  shift, and go to state 58

    $default  reduce using rule 24 (exp)


State 72

   25 exp: exp "&&" f .
   27 f: f . "==" g
   28  | f . "!=" g

    "=="  shift, and go to state 57
    "!="  shift, and go to state 58

    $default  reduce using rule 25 (exp)


State 73

   27 f: f "==" g .
   30 g: g . ">=" h
   31  | g . "<=" h
   32  | g . ">" h
   33  | g . "<" h

    ">="  shift, and go to state 59
    "<="  shift, and go to state 60
    ">"   shift, and go to state 61
    "<"   shift, and go to state 62

    $default  reduce using rule 27 (f)


State 74

   28 f: f "!=" g .
   30 g: g . ">=" h
   31  | g . "<=" h
   32  | g . ">" h
   33  | g . "<" h

    ">="  shift, and go to state 59
    "<="  shift, and go to state 60
    ">"   shift, and go to state 61
    "<"   shift, and go to state 62

    $default  reduce using rule 28 (f)


State 75

   30 g: g ">=" h .
   35 h: h . "+" i
   36  | h . "-" i

    "+"  shift, and go to state 63
    "-"  shift, and go to state 64

    $default  reduce using rule 30 (g)


State 76

   31 g: g "<=" h .
   35 h: h . "+" i
   36  | h . "-" i

    "+"  shift, and go to state 63
    "-"  shift, and go to state 64

    $default  reduce using rule 31 (g)


State 77

   32 g: g ">" h .
   35 h: h . "+" i
   36  | h . "-" i

    "+"  shift, and go to state 63
    "-"  shift, and go to state 64

    $default  reduce using rule 32 (g)


State 78

   33 g: g "<" h .
   35 h: h . "+" i
   36  | h . "-" i

    "+"  shift, and go to state 63
    "-"  shift, and go to state 64

    $default  reduce using rule 33 (g)


State 79

   35 h: h "+" i .
   38 i: i . "*" j
   39  | i . "/" j

    "*"  shift, and go to state 65
    "/"  shift, and go to state 66

    $default  reduce using rule 35 (h)


State 80

   36 h: h "-" i .
   38 i: i . "*" j
   39  | i . "/" j

    "*"  shift, and go to state 65
    "/"  shift, and go to state 66

    $default  reduce using rule 36 (h)


State 81

   38 i: i "*" j .

    $default  reduce using rule 38 (i)


State 82

   39 i: i "/" j .

    $default  reduce using rule 39 (i)


State 83

   20 cond: IF "(" exp ")" "{" . stmts "}" extend

    $default  reduce using rule 11 (stmts)

    stmts  go to state 85


State 84

   19 loop: WHILE "(" exp ")" "{" . stmts "}"

    $default  reduce using rule 11 (stmts)

    stmts  go to state 86


State 85

   12 stmts: stmts . ";" stmt ";"
   20 cond: IF "(" exp ")" "{" stmts . "}" extend

    ";"  shift, and go to state 10
    "}"  shift, and go to state 87


State 86

   12 stmts: stmts . ";" stmt ";"
   19 loop: WHILE "(" exp ")" "{" stmts . "}"

    ";"  shift, and go to state 10
    "}"  shift, and go to state 88


State 87

   20 cond: IF "(" exp ")" "{" stmts "}" . extend

    ELSE  shift, and go to state 89

    $default  reduce using rule 21 (extend)

    extend  go to state 90


State 88

   19 loop: WHILE "(" exp ")" "{" stmts "}" .

    $default  reduce using rule 19 (loop)


State 89

   22 extend: ELSE . "{" stmts "}"
   23       | ELSE . IF "(" exp ")" "{" stmts "}" extend

    IF   shift, and go to state 91
    "{"  shift, and go to state 92


State 90

   20 cond: IF "(" exp ")" "{" stmts "}" extend .

    $default  reduce using rule 20 (cond)


State 91

   23 extend: ELSE IF . "(" exp ")" "{" stmts "}" extend

    "("  shift, and go to state 93


State 92

   22 extend: ELSE "{" . stmts "}"

    $default  reduce using rule 11 (stmts)

    stmts  go to state 94


State 93

   23 extend: ELSE IF "(" . exp ")" "{" stmts "}" extend

    IDENT   shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    STRING  shift, and go to state 35
    BOOL    shift, and go to state 36
    "("     shift, and go to state 37
    "-"     shift, and go to state 38
    "!"     shift, and go to state 39

    exp  go to state 95
    f    go to state 41
    g    go to state 42
    h    go to state 43
    i    go to state 44
    j    go to state 45
    k    go to state 46


State 94

   12 stmts: stmts . ";" stmt ";"
   22 extend: ELSE "{" stmts . "}"

    ";"  shift, and go to state 10
    "}"  shift, and go to state 96


State 95

   23 extend: ELSE IF "(" exp . ")" "{" stmts "}" extend
   24 exp: exp . "||" f
   25    | exp . "&&" f

    ")"   shift, and go to state 97
    "||"  shift, and go to state 55
    "&&"  shift, and go to state 56


State 96

   22 extend: ELSE "{" stmts "}" .

    $default  reduce using rule 22 (extend)


State 97

   23 extend: ELSE IF "(" exp ")" . "{" stmts "}" extend

    "{"  shift, and go to state 98


State 98

   23 extend: ELSE IF "(" exp ")" "{" . stmts "}" extend

    $default  reduce using rule 11 (stmts)

    stmts  go to state 99


State 99

   12 stmts: stmts . ";" stmt ";"
   23 extend: ELSE IF "(" exp ")" "{" stmts . "}" extend

    ";"  shift, and go to state 10
    "}"  shift, and go to state 100


State 100

   23 extend: ELSE IF "(" exp ")" "{" stmts "}" . extend

    ELSE  shift, and go to state 89

    $default  reduce using rule 21 (extend)

    extend  go to state 101


State 101

   23 extend: ELSE IF "(" exp ")" "{" stmts "}" extend .

    $default  reduce using rule 23 (extend)
